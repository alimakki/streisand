---
- name: Create the ikev2 certificates directory directory
  file:
    path: "{{ ikev2_path }}"
    owner: root
    group: root
    mode: 0750
    state: directory

- include_role:
    name: certificates
  vars:
    ca_path:            "{{ ikev2_path }}"
    tls_ca:             "{{ ikev2_ca }}"
    tls_client_path:    "{{ ikev2_path }}"
    vpn_name:           "ipsec_ikev2"
    generate_ca_server: yes
    generate_client:    yes
    generate_pkcs:      yes
    tls_key_size:                "{{ ikev2_key_size }}"
    tls_request_subject:         "{{ ikev2_request_subject }}"
    tls_server_common_name_file: "{{ ikev2_server_common_name_file }}"
    tls_sans:
      - "{{ streisand_ipv4_address }}"

- name: Register the IKEv2 server common name
  command: cat "{{ ikev2_server_common_name_file }}"
  register: ikev2_server_name
  changed_when: False

- name: Add the CA public certificate to the NSS database
  command: "certutil -A -i {{ ikev2_path }}/ca.crt -n \"ca-certificate\" -k rsa -x -d sql:/etc/ipsec.d -t \"CT,,\" -2"

- name: Add the server public certificate to the NSS database
  command: "certutil -A -i {{ ikev2_path }}/server.crt -n \"{{ ikev2_server_name.stdout }}\" -k rsa -x -d sql:/etc/ipsec.d -t \",,\" -1 -6 -8 \"{{ ikev2_server_name.stdout }}\""

- name: Add the client public certificate(s) to the NSS database
  command: "certutil -A -i {{ ikev2_path }}/{{ client.stdout }}/client.crt -n \"{{ client.stdout }}\" -k rsa -x -d sql:/etc/ipsec.d -t \",,\" -1 -6 -8 \"{{ client.stdout }}\""
  with_items: "{{ vpn_client_names.results }}"
  loop_control:
    loop_var: "client"
    label: "{{ client.item }}"

- name: Export the p12 file that contain the servier certificate, private key, and CA certificate
  command: >
    openssl pkcs12 -export
    -in {{ ikev2_path }}/server.crt
    -inkey {{ ikev2_path }}/server.key
    -name {{ ikev2_server_name.stdout }}
    -out {{ ikev2_path }}/{{ ikev2_server_name.stdout }}.p12
    -certfile {{ ikev2_path }}/ca.crt
    -passout pass:"foobar"
  creates: "{{ ikev2_path }}/{{ ikev2_server_name.stdout }}.p12"

- name: Import the server p12 file into the NSS database
  expect:
    command: "ipsec import {{ ikev2_path }}/{{ ikev2_server_name.stdout }}.p12"
    responses:
      "Enter password for PKCS12 file": "foobar"

- name: Generate the IPsec-IKEv2 configuration file
  template:
    src: ipsec.conf.j2
    dest: /etc/ipsec.d/ikev2.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart Libreswan
